# Copyright (c) 2015 Hanspeter Portner (dev@open-music-kontrollers.ch)
#
# This is free software: you can redistribute it and/or modify
# it under the terms of the Artistic License 2.0 as published by
# The Perl Foundation.
#
# This source is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# Artistic License 2.0 for more details.
#
# You should have received a copy of the Artistic License 2.0
# along the source as a COPYING file. If not, obtain it from
# http://www.perlfoundation.org/artistic_license_2_0.

@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix lv2:  <http://lv2plug.in/ns/lv2core#> .
@prefix ui:   <http://lv2plug.in/ns/extensions/ui#> .
@prefix atom: <http://lv2plug.in/ns/ext/atom#> .
@prefix ui:   <http://lv2plug.in/ns/extensions/ui#> .
@prefix work: <http://lv2plug.in/ns/ext/worker#> .
@prefix midi: <http://lv2plug.in/ns/ext/midi#> .
@prefix time: <http://lv2plug.in/ns/ext/time#> .
@prefix state: <http://lv2plug.in/ns/ext/state#> .
@prefix pset:	<http://lv2plug.in/ns/ext/presets#> .
@prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#> .
@prefix rsz:  <http://lv2plug.in/ns/ext/resize-port#> .
@prefix kx:		<http://kxstudio.sf.net/ns/lv2ext/external-ui#> .

@prefix osc:  <http://opensoundcontrol.org#> .
@prefix lic:	<http://opensource.org/licenses/> .
@prefix omk:	<http://open-music-kontrollers.ch/ventosus#> .
@prefix proj:	<http://open-music-kontrollers.ch/lv2/> .
@prefix moony:	<http://open-music-kontrollers.ch/lv2/moony#> .

# Maintainer
omk:me
	a foaf:Person ;
	foaf:name "Hanspeter Portner" ;
	foaf:mbox <dev@open-music-kontrollers.ch> ;
	foaf:homepage <http://open-music-kontrollers.ch> .

# Project
proj:moony
	a doap:Project ;
	doap:maintainer omk:me ;
	doap:name "Moony Bundle" .

# Common UI
moony:common_eo
	a ui:EoUI ;
	ui:portNotification [
		ui:plugin moony:c1xc1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c2xc2 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c4xc4 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:a1xa1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:a2xa2 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:a4xa4 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c1a1xc1a1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c2a1xc2a1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c4a1xc4a1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] ;
	lv2:requiredFeature ui:idleInterface, ui:portMap .
moony:common_ui
	a ui:UI ;
	ui:portNotification [
		ui:plugin moony:c1xc1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c2xc2 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c4xc4 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:a1xa1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:a2xa2 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:a4xa4 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c1a1xc1a1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c2a1xc2a1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c4a1xc4a1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] ;
	lv2:requiredFeature ui:idleInterface, ui:portMap ;
  lv2:extensionData ui:idleInterface, ui:showInterface .
moony:common_x11
	a ui:X11UI ;
	ui:portNotification [
		ui:plugin moony:c1xc1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c2xc2 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c4xc4 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:a1xa1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:a2xa2 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:a4xa4 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c1a1xc1a1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c2a1xc2a1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c4a1xc4a1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] ;
	lv2:requiredFeature ui:idleInterface, ui:portMap ;
	lv2:optionalFeature ui:resize ;
  lv2:extensionData ui:idleInterface .
moony:common_kx
	a kx:Widget ;
	ui:portNotification [
		ui:plugin moony:c1xc1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c2xc2 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c4xc4 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:a1xa1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:a2xa2 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:a4xa4 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c1a1xc1a1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c2a1xc2a1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] , [
		ui:plugin moony:c4a1xc4a1 ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
		ui:notifyType atom:Object ;
	] ;
	lv2:requiredFeature kx:Host, ui:portMap .

# C1XC1 Plugin
moony:c1xc1
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Moony C1 x C1" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:moony ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;
	lv2:extensionData work:interface, state:interface ;
	lv2:requiredFeature work:schedule ;

	lv2:port [
	# input control ports
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 0 ;
		lv2:symbol "input_1" ;
		lv2:name "Input 1" ;
		lv2:default 0.0;
	] , [
	# output control ports
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 1 ;
		lv2:symbol "output_1" ;
		lv2:name "Output 1" ;
	] , [
	# input control port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 2 ;
		lv2:symbol "control" ;
		lv2:name "Control" ;
		rsz:minimumSize 65536 ;
	] , [
	# output notify port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 3 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
		rsz:minimumSize 65536 ;
	] .

# C2XC2 Plugin
moony:c2xc2
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Moony C2 x C2" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:moony ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;
	lv2:extensionData work:interface, state:interface ;
	lv2:requiredFeature work:schedule ;

	lv2:port [
	# input control ports
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 0 ;
		lv2:symbol "input_1" ;
		lv2:name "Input 1" ;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 1 ;
		lv2:symbol "input_2" ;
		lv2:name "Input 2" ;
		lv2:default 0.0;
	] , [
	# output control ports
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 2 ;
		lv2:symbol "output_1" ;
		lv2:name "Output 1" ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 3 ;
		lv2:symbol "output_2" ;
		lv2:name "Output 2" ;
	] , [
	# input control port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 4 ;
		lv2:symbol "control" ;
		lv2:name "Control" ;
		rsz:minimumSize 65536 ;
	] , [
	# output notify port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 5 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
		rsz:minimumSize 65536 ;
	] .

# C4XC4 Plugin
moony:c4xc4
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Moony C4 x C4" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:moony ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;
	lv2:extensionData work:interface, state:interface ;
	lv2:requiredFeature work:schedule ;

	lv2:port [
	# input control ports
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 0 ;
		lv2:symbol "input_1" ;
		lv2:name "Input 1" ;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 1 ;
		lv2:symbol "input_2" ;
		lv2:name "Input 2" ;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 2 ;
		lv2:symbol "input_3" ;
		lv2:name "Input 3" ;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 3 ;
		lv2:symbol "input_4" ;
		lv2:name "Input 4" ;
		lv2:default 0.0;
	] , [
	# output control ports
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 4 ;
		lv2:symbol "output_1" ;
		lv2:name "Output 1" ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 5 ;
		lv2:symbol "output_2" ;
		lv2:name "Output 2" ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 6 ;
		lv2:symbol "output_3" ;
		lv2:name "Output 3" ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 7 ;
		lv2:symbol "output_4" ;
		lv2:name "Output 4" ;
	] , [
	# input control port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 8 ;
		lv2:symbol "control" ;
		lv2:name "Control" ;
		rsz:minimumSize 65536 ;
	] , [
	# output notify port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 9 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
		rsz:minimumSize 65536 ;
	] .

# A1XA1 Plugin
moony:a1xa1
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Moony A1 x A1" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:moony ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;
	lv2:extensionData work:interface, state:interface ;
	lv2:requiredFeature work:schedule ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 0 ;
		lv2:symbol "event_in_1" ;
		lv2:name "Event In 1" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 1 ;
		lv2:symbol "event_out_1" ;
		lv2:name "Event Out 1" ;
		lv2:designation lv2:control ;
	] , [
	# input control port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 2 ;
		lv2:symbol "control" ;
		lv2:name "Control" ;
		rsz:minimumSize 65536 ;
	] , [
	# output notify port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 3 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
		rsz:minimumSize 65536 ;
	] .

# A2XA2 Plugin
moony:a2xa2
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Moony A2 x A2" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:moony ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;
	lv2:extensionData work:interface, state:interface ;
	lv2:requiredFeature work:schedule ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 0 ;
		lv2:symbol "event_in_1" ;
		lv2:name "Event In 1" ;
		lv2:designation lv2:control ;
	] , [
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 1 ;
		lv2:symbol "event_in_2" ;
		lv2:name "Event In 2" ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 2 ;
		lv2:symbol "event_out_1" ;
		lv2:name "Event Out 1" ;
		lv2:designation lv2:control ;
	] , [
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 3 ;
		lv2:symbol "event_out_2" ;
		lv2:name "Event Out 2" ;
	] , [
	# input control port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 4 ;
		lv2:symbol "control" ;
		lv2:name "Control" ;
		rsz:minimumSize 65536 ;
	] , [
	# output notify port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 5 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
		rsz:minimumSize 65536 ;
	] .

# A4XA4 Plugin
moony:a4xa4
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Moony A4 x A4" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:moony ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;
	lv2:extensionData work:interface, state:interface ;
	lv2:requiredFeature work:schedule ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 0 ;
		lv2:symbol "event_in_1" ;
		lv2:name "Event In 1" ;
		lv2:designation lv2:control ;
	] , [
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 1 ;
		lv2:symbol "event_in_2" ;
		lv2:name "Event In 2" ;
	] , [
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 2 ;
		lv2:symbol "event_in_3" ;
		lv2:name "Event In 3" ;
	] , [
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 3 ;
		lv2:symbol "event_in_4" ;
		lv2:name "Event In 4" ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 4 ;
		lv2:symbol "event_out_1" ;
		lv2:name "Event Out 1" ;
		lv2:designation lv2:control ;
	] , [
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 5 ;
		lv2:symbol "event_out_2" ;
		lv2:name "Event Out 2" ;
	] , [
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 6 ;
		lv2:symbol "event_out_3" ;
		lv2:name "Event Out 3" ;
	] , [
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 7 ;
		lv2:symbol "event_out_4" ;
		lv2:name "Event Out 4" ;
	] , [
	# input control port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 8 ;
		lv2:symbol "control" ;
		lv2:name "Control" ;
		rsz:minimumSize 65536 ;
	] , [
	# output notify port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 9 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
		rsz:minimumSize 65536 ;
	] .

# C1A1XC1A1 Plugin
moony:c1a1xc1a1
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Moony C1+A1 x C1+A1" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:moony ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;
	lv2:extensionData work:interface, state:interface ;
	lv2:requiredFeature work:schedule ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 0 ;
		lv2:symbol "event_in_1" ;
		lv2:name "Event In 1" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 1 ;
		lv2:symbol "event_out_1" ;
		lv2:name "Event Out 1" ;
		lv2:designation lv2:control ;
	] , [
	# input port
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 2 ;
		lv2:symbol "input_1" ;
		lv2:name "Input 1" ;
	] , [
	# output port
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 3 ;
		lv2:symbol "output_1" ;
		lv2:name "Output 1" ;
	] , [
	# input control port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 4 ;
		lv2:symbol "control" ;
		lv2:name "Control" ;
		rsz:minimumSize 65536 ;
	] , [
	# output notify port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 5 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
		rsz:minimumSize 65536 ;
	] .

# C2A1XC2A1 Plugin
moony:c2a1xc2a1
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Moony C2+A1 x C2+A1" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:moony ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;
	lv2:extensionData work:interface, state:interface ;
	lv2:requiredFeature work:schedule ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 0 ;
		lv2:symbol "event_in_1" ;
		lv2:name "Event In 1" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 1 ;
		lv2:symbol "event_out_1" ;
		lv2:name "Event Out 1" ;
		lv2:designation lv2:control ;
	] , [
	# input port
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 2 ;
		lv2:symbol "input_1" ;
		lv2:name "Input 1" ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 3 ;
		lv2:symbol "input_2" ;
		lv2:name "Input 2" ;
	] , [
	# output port
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 4 ;
		lv2:symbol "output_1" ;
		lv2:name "Output 1" ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 5 ;
		lv2:symbol "output_2" ;
		lv2:name "Output 2" ;
	] , [
	# input control port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 6 ;
		lv2:symbol "control" ;
		lv2:name "Control" ;
		rsz:minimumSize 65536 ;
	] , [
	# output notify port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 7 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
		rsz:minimumSize 65536 ;
	] .

# C4A1XC4A1 Plugin
moony:c4a1xc4a1
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Moony C4+A1 x C4+A1" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:moony ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;
	lv2:extensionData work:interface, state:interface ;
	lv2:requiredFeature work:schedule ;

	lv2:port [
	# input event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 0 ;
		lv2:symbol "event_in_1" ;
		lv2:name "Event In 1" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		atom:supports time:Position ;
		lv2:index 1 ;
		lv2:symbol "event_out_1" ;
		lv2:name "Event Out 1" ;
		lv2:designation lv2:control ;
	] , [
	# input port
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 2 ;
		lv2:symbol "input_1" ;
		lv2:name "Input 1" ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 3 ;
		lv2:symbol "input_2" ;
		lv2:name "Input 2" ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 4 ;
		lv2:symbol "input_3" ;
		lv2:name "Input 3" ;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 5 ;
		lv2:symbol "input_4" ;
		lv2:name "Input 4" ;
	] , [
	# output port
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 6 ;
		lv2:symbol "output_1" ;
		lv2:name "Output 1" ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 7 ;
		lv2:symbol "output_2" ;
		lv2:name "Output 2" ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 8 ;
		lv2:symbol "output_3" ;
		lv2:name "Output 3" ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 9 ;
		lv2:symbol "output_4" ;
		lv2:name "Output 4" ;
	] , [
	# input control port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 10 ;
		lv2:symbol "control" ;
		lv2:name "Control" ;
		rsz:minimumSize 65536 ;
	] , [
	# output notify port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		lv2:index 11 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
		rsz:minimumSize 65536 ;
	] .

# Template presets
moony:template-control_through
	a pset:Preset ;
	lv2:appliesTo moony:c1xc1 ;
	lv2:appliesTo moony:c2xc2 ;
	lv2:appliesTo moony:c4xc4 ;
	rdfs:label "Through" ;
	rdfs:seeAlso <presets.ttl> .

moony:template-atom_through
	a pset:Preset ;
	lv2:appliesTo moony:a1xa1 ;
	lv2:appliesTo moony:c1a1xc1a1 ;
	lv2:appliesTo moony:c2a1xc2a1 ;
	lv2:appliesTo moony:c4a1xc4a1 ;
	rdfs:label "Through" ;
	rdfs:seeAlso <presets.ttl> .
moony:template-midi_responder
	a pset:Preset ;
	lv2:appliesTo moony:a1xa1 ;
	lv2:appliesTo moony:c1a1xc1a1 ;
	lv2:appliesTo moony:c2a1xc2a1 ;
	lv2:appliesTo moony:c4a1xc4a1 ;
	rdfs:label "MIDI responder" ;
	rdfs:seeAlso <presets.ttl> .
moony:template-osc_responder
	a pset:Preset ;
	lv2:appliesTo moony:a1xa1 ;
	lv2:appliesTo moony:c1a1xc1a1 ;
	lv2:appliesTo moony:c2a1xc2a1 ;
	lv2:appliesTo moony:c4a1xc4a1 ;
	rdfs:label "OSC responder" ;
	rdfs:seeAlso <presets.ttl> .

moony:template-atom_through2
	a pset:Preset ;
	lv2:appliesTo moony:a2xa2 ;
	rdfs:label "Through" ;
	rdfs:seeAlso <presets.ttl> .
moony:template-atom_multiplex2
	a pset:Preset ;
	lv2:appliesTo moony:a2xa2 ;
	rdfs:label "Multiplex" ;
	rdfs:seeAlso <presets.ttl> .

moony:template-atom_through4
	a pset:Preset ;
	lv2:appliesTo moony:a4xa4 ;
	rdfs:label "Through" ;
	rdfs:seeAlso <presets.ttl> .
moony:template-atom_multiplex4
	a pset:Preset ;
	lv2:appliesTo moony:a4xa4 ;
	rdfs:label "Multiplex" ;
	rdfs:seeAlso <presets.ttl> .
