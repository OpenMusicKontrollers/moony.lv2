# Copyright (c) 2015 Hanspeter Portner (dev@open-music-kontrollers.ch)
#
# This is free software: you can redistribute it and/or modify
# it under the terms of the Artistic License 2.0 as published by
# The Perl Foundation.
#
# This source is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# Artistic License 2.0 for more details.
#
# You should have received a copy of the Artistic License 2.0
# along the source as a COPYING file. If not, obtain it from
# http://www.perlfoundation.org/artistic_license_2_0.

@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix lv2:  <http://lv2plug.in/ns/lv2core#> .
@prefix ui:   <http://lv2plug.in/ns/extensions/ui#> .
@prefix atom: <http://lv2plug.in/ns/ext/atom#> .
@prefix ui:   <http://lv2plug.in/ns/extensions/ui#> .
@prefix midi: <http://lv2plug.in/ns/ext/midi#> .
@prefix state: <http://lv2plug.in/ns/ext/state#> .
@prefix kx:		<http://kxstudio.sf.net/ns/lv2ext/external-ui#> .

@prefix osc:  <http://opensoundcontrol.org#> .
@prefix lic:	<http://opensource.org/licenses/> .
@prefix omk:	<http://open-music-kontrollers.ch/ventosus#> .
@prefix proj:	<http://open-music-kontrollers.ch/lv2/> .
@prefix lua:	<http://open-music-kontrollers.ch/lv2/lua#> .

# Maintainer
omk:me
	a foaf:Person ;
	foaf:name "Hanspeter Portner" ;
	foaf:mbox <dev@open-music-kontrollers.ch> ;
	foaf:homepage <http://open-music-kontrollers.ch> .

# Project
proj:lua
	a doap:Project ;
	doap:maintainer omk:me ;
	doap:name "Lua Bundle" .

# Common UI
lua:common_eo
	a ui:EoUI ;
	ui:portNotification [
		ui:plugin lua:control ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
	] , [
		ui:plugin lua:atom ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
	] .
lua:common_ui
	a ui:UI ;
	ui:portNotification [
		ui:plugin lua:control ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
	] , [
		ui:plugin lua:atom ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
	] ;
	lv2:requiredFeature ui:idleInterface ;
  lv2:extensionData ui:idleInterface, ui:showInterface .
lua:common_x11
	a ui:X11UI ;
	ui:portNotification [
		ui:plugin lua:control ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
	] , [
		ui:plugin lua:atom ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
	] ;
	lv2:requiredFeature ui:idleInterface ;
	lv2:optionalFeature ui:resize ;
  lv2:extensionData ui:idleInterface .
lua:common_kx
	a kx:Widget ;
	ui:portNotification [
		ui:plugin lua:control ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
	] , [
		ui:plugin lua:atom ;
		lv2:symbol "notify" ;
		ui:protocol atom:eventTransfer ;
	] ;
	lv2:requiredFeature kx:Host .

# Control Plugin
lua:control
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Lua for Control Ports" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:lua ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;
  lv2:extensionData state:interface ;

	lv2:port [
	# input control port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		lv2:index 0 ;
		lv2:symbol "control" ;
		lv2:name "Control" ;
		lv2:designation lv2:control ;
	] , [
	# output notify port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		lv2:index 1 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
		lv2:designation lv2:control ;
	] , [
	# input control ports
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 2 ;
		lv2:symbol "input_1" ;
		lv2:name "Input 1" ;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 3 ;
		lv2:symbol "input_2" ;
		lv2:name "Input 2" ;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 4 ;
		lv2:symbol "input_3" ;
		lv2:name "Input 3" ;
		lv2:default 0.0;
	] , [
	  a lv2:InputPort ,
			lv2:ControlPort ;
		lv2:index 5 ;
		lv2:symbol "input_4" ;
		lv2:name "Input 4" ;
		lv2:default 0.0;
	] , [
	# output control ports
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 6 ;
		lv2:symbol "output_1" ;
		lv2:name "Output 1" ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 7 ;
		lv2:symbol "output_2" ;
		lv2:name "Output 2" ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 8 ;
		lv2:symbol "output_3" ;
		lv2:name "Output 3" ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 9 ;
		lv2:symbol "output_4" ;
		lv2:name "Output 4" ;
	] .

# Midi Plugin
lua:atom
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Lua for Atom Ports" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:lua ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;
  lv2:extensionData state:interface ;

	lv2:port [
	# input control port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		lv2:index 0 ;
		lv2:symbol "control" ;
		lv2:name "Control" ;
		lv2:designation lv2:control ;
	] , [
	# output notify port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		lv2:index 1 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
		lv2:designation lv2:control ;
	] , [
	# input midi port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		lv2:index 2 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Out" ;
	] , [
	# output midi port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent ;
		lv2:index 3 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Out" ;
	] .
